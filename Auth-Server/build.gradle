group = 'com.dju.gdsc'
version = '1.0'
sourceCompatibility = '8'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.0")
}
buildscript {
    ext {
        // authentication-server 의 springBootVersion 버전 deprecated 되서 버전 낮추춤
        springBootVersion = '2.6.1'
    }
    repositories {
        mavenCentral()
    }

}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'mysql:mysql-connector-java'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    // cloud client 설정 관련
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    // spring cloud security 설정 관련
    // 명시적으로 버전설정 하지 않으면 문제가 있다!
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.6.8'

    //swagger
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.9'
    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    // spring cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.9.2'
    // slack
    implementation 'com.slack.api:slack-api-client:1.23.1'


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}